rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is an editor of a graduation
    function isEditor(graduationId) {
      let gradData = get(/databases/$(database)/documents/graduations/$(graduationId)).data;
      return request.auth != null && 
             (request.auth.uid in gradData.editors || 
              request.auth.uid == gradData.ownerUid); // Backward compatibility
    }
    
    // Graduation documents
    match /graduations/{gradId} {
      // Allow read if user is an editor or owner
      allow read: if request.auth != null && 
                     (request.auth.uid in resource.data.editors ||
                      request.auth.uid == resource.data.ownerUid); // Backward compatibility
      
      // Allow create if authenticated (user will be added to editors array)
      allow create: if request.auth != null &&
                       request.auth.uid in request.resource.data.editors;
      
      // Allow update if user is an editor or owner
      // Special rules for editors array modification
      allow update: if request.auth != null && 
                       (request.auth.uid in resource.data.editors ||
                        request.auth.uid == resource.data.ownerUid) &&
                       // Ensure editors array always has at least one member (if it exists)
                       (!exists(request.resource.data.editors) || request.resource.data.editors.size() >= 1) &&
                       // Only existing editors can modify the editors array
                       (request.resource.data.editors == resource.data.editors ||
                        request.auth.uid in resource.data.editors ||
                        request.auth.uid == resource.data.ownerUid);
      
      // Allow delete if user is an editor or owner
      allow delete: if request.auth != null && 
                       (request.auth.uid in resource.data.editors ||
                        request.auth.uid == resource.data.ownerUid);
      
      // Students subcollection
      match /students/{studentId} {
        // Allow read/write if user is an editor of the parent graduation
        allow read, write: if isEditor(gradId);
      }
      
      // Content pages subcollection
      match /contentPages/{pageId} {
        // Allow read/write if user is an editor of the parent graduation
        allow read, write: if isEditor(gradId);
      }
    }
    
    // Public read access for specific routes (like student upload portals)
    // These are handled separately by the application logic
  }
}
